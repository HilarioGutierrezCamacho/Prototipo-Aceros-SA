@page "/listado-articulos"
@using System.ComponentModel
@using AntDesign.TableModels
@using PrototipoAcerosSA.Data
@using PrototipoAcerosSA.Models
@inject NavigationManager UriHelper


<style>
    .about-section {
        padding: 20px;
        text-align: center;
        background-color: #474e5d;
        color: white;
        width: 100%;
    }
</style>

<div class="about-section">
    <h3 style="color: white;">Consulta de Articulos</h3>
</div>

<br />
<br />

<Row Gutter="8">
    <Col Span="2">
    <label style="margin: 1px;">Buscar por:</label>
    </Col>
    <Col Span="3">
    <Select @bind-Value="@buscar_por"
            Style="width: 120px; margin: 1px;"
            TItemValue="string"
            TItem="string">
        <SelectOptions>
            <SelectOption TItemValue="string" TItem="string" Value="@("Clave")" Label="Clave" />
            <SelectOption TItemValue="string" TItem="string" Value="@("Nombre")" Label="Nombre" />
        </SelectOptions>
    </Select>
    </Col>
    <Col Span="5">
    <Search Style="margin: 1px;" Placeholder="Introduce tu búsqueda..." Size="@InputSize.Default" @bind-Value="@filtro" OnSearch="FiltrarArticulos" />
    </Col>
</Row>

<hr />

<Button Icon="form" Type="primary" OnClick="() => NavegarNuevoArticulo()">
    Agregar Nuevo Articulo
</Button>

<br />
<br />

<Table @ref="table"
       TItem="Articulo"
       DataSource="@articulos"
       Total="_total"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize"
       Context="articulo">
    <AntDesign.Column @bind-Field="@articulo.Clave" Sortable />
    <AntDesign.Column @bind-Field="@articulo.Descripcion" Sortable />
    <AntDesign.Column @bind-Field="@articulo.Marca" Sortable />
    <AntDesign.Column @bind-Field="@articulo.Almacen" Sortable />
    <AntDesign.Column @bind-Field="@articulo.Ubicacion" Sortable />
    <AntDesign.Column @bind-Field="@articulo.Unidad" Sortable />
    <AntDesign.Column @bind-Field="@articulo.PrecioUnitario" Sortable />
    <ActionColumn Title="Acciones">
        <Button Icon="delete" Danger>
            Eliminar
        </Button>
        <Button Icon="edit" Type="primary" OnClick="() => NavegarEditarArticulo(articulo.IdArticulo)">
            Editar
        </Button>
    </ActionColumn>
</Table>

<br />
<p>Pagina Actual: @_pageIndex | Articulos por Página: @_pageSize | Total: @_total</p>

@code {

    [Inject]
    private IArticuloService articuloService { get; set; }

    List<Articulo> articulos = new List<Articulo>();
    List<Articulo> todos = new List<Articulo>();
    List<Articulo> articulosFiltrados = new List<Articulo>();

    ITable table;
    int _pageIndex = 1;
    int _pageSize = 5;
    int _total = 0;

    string buscar_por = "Clave";
    string filtro = "";

    protected override async Task OnInitializedAsync()
    {
        //articulos.Add(new Articulo() { IdArticulo = 1, Clave = "ART001", Descripcion = "Acero", Marca = "TRUPER", Almacen = "MP", Ubicacion = "PB", Unidad = "Pieza", PrecioUnitario = 50.50 });
        //articulos.Add(new Articulo() { IdArticulo = 2, Clave = "ART002", Descripcion = "Libreta", Marca = "Patito", Almacen = "VA", Ubicacion = "PB", Unidad = "Pieza", PrecioUnitario = 10.50 });
        //articulos.Add(new Articulo() { IdArticulo = 3, Clave = "ART003", Descripcion = "Tornillos", Marca = "TRUPER", Almacen = "RF", Ubicacion = "PB", Unidad = "Caja", PrecioUnitario = 25.75 });
        articulos = await articuloService.GetTodosArticulos();
        _total = articulos.Count();
        todos = articulos;
    }

    public void FiltrarArticulos()
    {
        articulosFiltrados = new List<Articulo>();
        if (filtro != null && filtro.Length > 0)
        {
            foreach (var articulo in articulos)
            {
                if (buscar_por == "Clave")
                {
                    if (articulo.Clave.Contains(filtro.Trim()))
                    {
                        articulosFiltrados.Add(articulo);
                    }
                }
                else
                {
                    if (articulo.Descripcion.Contains(filtro.Trim()))
                    {
                        articulosFiltrados.Add(articulo);
                    }
                }
            }
            articulos = articulosFiltrados;
        }
        else
        {
            articulos = todos;
        }
    }

    public void NavegarEditarArticulo(int IdArticulo)
    {
        UriHelper.NavigateTo($"editar-articulo/{IdArticulo}");
    }

    public void NavegarNuevoArticulo()
    {
        UriHelper.NavigateTo($"nuevo-articulo");
    }

}
