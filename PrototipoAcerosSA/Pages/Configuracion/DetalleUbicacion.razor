@page "/detalle-ubicacion/{IdUbicacion}"

@using System.Text.RegularExpressions
@using PrototipoAcerosSA.Data
@inject NavigationManager UriHelper
@inject IJSRuntime js

<style>
    .about-section {
        padding: 20px;
        text-align: center;
        background-color: #474e5d;
        color: white;
        width: 100%;
    }
</style>

<div class="about-section">
    <h3 style="color: white;">@Titulo</h3>
</div>

<br />
<div style="background-color: #ffffff; padding: 20px;">
    <div style="background: #ffffff; padding: 20px; border-radius: 5px; width: 100%;">
        <Form Model="@FormUbicacion">
            <Card Bordered="true" Style="align-self: center;">
                <Body>
                    <Row Gutter="24">
                        <Col Span="8">
                        <FormItem Label="Clave:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Clave" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                        <Col Span="16">
                        <FormItem Label="Nombre:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Nombre" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                    </Row>
                    <Row Gutter="24">
                        <Col Span="12">
                        <FormItem Label="Número de secciones:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.NumeroSecciones" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                        <Col Span="12">
                        <FormItem Label="Número de pasillo:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.NumeroPasillo" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                    </Row>
                    <Row Gutter="24">
                        <Col Span="8">
                        <FormItem Label="Alto:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Alto" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                        <Col Span="8">
                        <FormItem Label="Largo:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Largo" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                        <Col Span="8">
                        <FormItem Label="Ancho:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Ancho" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                    </Row>
                    <Row Gutter="24">
                        <Col Span="8">
                        <FormItem Label="Estatus:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Select DataSource="@est"
                                    DefaultValue="@opcion"
                                    @bind-Value="@FormUbicacion.Estatus"
                                    ValueName="@nameof(Estatus.Nombre)"
                                    LabelName="@nameof(Estatus.Nombre)"
                                    disabled>
                            </Select>
                        </FormItem>
                        </Col>
                        <Col Span="16">
                        <FormItem Label="Descripción:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Descripcion" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                    </Row>

                </Body>
                <ActionTemplate>
                    <CardAction Style="color: red;"><Icon Style="color: red;" Type="rollback" Theme="outline" OnClick="() => Cancelar()" /> Regresar</CardAction>
                </ActionTemplate>
            </Card>
        </Form>
    </div>
</div>

@code { [Inject]
    private IUbicacionService ubicacionService { get; set; }

    public class Ubicacion
    {
        public int IdUbicacion { get; set; }
        public string Clave { get; set; }
        public string Nombre { get; set; }
        public int NumeroSecciones { get; set; }
        public int NumeroPasillo { get; set; }
        public int Ancho { get; set; }
        public int Largo { get; set; }
        public int Alto { get; set; }
        public string Estatus { get; set; }
        public string Descripcion { get; set; }
    }

    public string opcion = "Seleccione...";
    public string Titulo = "Detalle Ubicación";
    public Ubicacion FormUbicacion = new Ubicacion();
    public List<Ubicacion> ubicaciones = new List<Ubicacion>();

    [Parameter]
    public string IdUbicacion { get; set; } = "";

    public class Estatus
    {
        public int IdEstatus { get; set; }
        public string Nombre { get; set; }
    }

    public Estatus estatus = new Estatus();
    public List<Estatus> est = new List<Estatus>();

    protected override async Task OnInitializedAsync()
    {
        est.Add(new Estatus() { IdEstatus = 0, Nombre = "Seleccione..." });
        est.Add(new Estatus() { IdEstatus = 1, Nombre = "Activo" });
        est.Add(new Estatus() { IdEstatus = 1, Nombre = "Inactivo" });
        await ObtenerUbicacion();
    }

    public async Task AddUbicacion()
    {
        await js.InvokeAsync<bool>("confirmarGuardar", "¡Exito al guardar!", "success");
        await ubicacionService.AddUbicacion(
        FormUbicacion.Clave,
        FormUbicacion.Nombre,
        FormUbicacion.NumeroSecciones,
        FormUbicacion.NumeroPasillo,
        FormUbicacion.Alto,
        FormUbicacion.Ancho,
        FormUbicacion.Largo,
        FormUbicacion.Estatus,
        FormUbicacion.Descripcion);
        var arts = await ubicacionService.GetTodosUbicacion();
        UriHelper.NavigateTo($"listado-ubicaciones");
    }

    public async Task ObtenerUbicacion()
    {
        var valor = int.Parse(IdUbicacion);
        var dto = await ubicacionService.GetUbicacionById(valor);
        FormUbicacion.IdUbicacion = dto.IdUbicacion;
        FormUbicacion.Clave = dto.Clave;
        FormUbicacion.Nombre = dto.Nombre;
        FormUbicacion.NumeroSecciones = dto.NumeroSecciones;
        FormUbicacion.NumeroPasillo = dto.NumeroPasillo;
        FormUbicacion.Alto = dto.Alto;
        FormUbicacion.Ancho = dto.Ancho;
        FormUbicacion.Largo = dto.Largo;
        FormUbicacion.Estatus = dto.Estatus;
        FormUbicacion.Descripcion = dto.Descripcion;
        if (dto.Estatus == "Activo")
        {
            opcion = "Activo";
        }
        else
        {
            opcion = "Inactivo";
        }
        ubicaciones.Add(new Ubicacion() { IdUbicacion = dto.IdUbicacion, Clave = dto.Clave, Nombre = dto.Nombre, NumeroSecciones = dto.NumeroSecciones, NumeroPasillo = dto.NumeroPasillo, Alto = dto.Alto, Ancho = dto.Ancho, Largo = dto.Largo, Estatus = dto.Estatus, Descripcion = dto.Descripcion });

    }

    public async Task UpdateUbicacion()
    {
        await js.InvokeAsync<bool>("confirmarGuardar", "¡Modificación exitosa!", "success");
        await ubicacionService.UpdateAlmacen(
        FormUbicacion.IdUbicacion,
        FormUbicacion.Clave,
        FormUbicacion.Nombre,
        FormUbicacion.NumeroSecciones,
        FormUbicacion.NumeroPasillo,
        FormUbicacion.Alto,
        FormUbicacion.Ancho,
        FormUbicacion.Largo,
        FormUbicacion.Estatus,
        FormUbicacion.Descripcion);
        var arts = await ubicacionService.GetTodosUbicacion();
        UriHelper.NavigateTo($"listado-ubicaciones");
    }
    public async Task Cancelar()
    {
        var arts = await ubicacionService.GetTodosUbicacion();
        UriHelper.NavigateTo($"listado-ubicaciones");
    }

}
