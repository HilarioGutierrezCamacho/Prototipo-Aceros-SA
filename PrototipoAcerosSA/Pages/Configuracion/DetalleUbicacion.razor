@page "/detalle-ubicacion/{IdUbicacion}"

@using System.Text.RegularExpressions
@using PrototipoAcerosSA.Data
@using PrototipoAcerosSA.Models
@inject NavigationManager UriHelper
@inject IJSRuntime js


<style>
    .about-section {
        padding: 20px;
        text-align: center;
        background-color: #474e5d;
        color: white;
        width: 100%;
    }
</style>

<div class="about-section">
    <h3 style="color: white;">@Titulo</h3>
</div>

<br />
<!--

<div style="background-color: #ffffff; padding: 20px;">
    <div style="background: #ffffff; padding: 20px; border-radius: 5px; width: 100%;">
        <Form Model="@FormUbicacion">
            <Card Bordered="true" Style="align-self: center;">
                <Body>
                    <Row Gutter="24">
                        <Col Span="8">
                        <FormItem Label="Clave:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Clave" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                        <Col Span="16">
                        <FormItem Label="Nombre:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Nombre" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                    </Row>
                    <Row Gutter="24">
                        <Col Span="12">
                        <FormItem Label="Número de secciones:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.NumeroSecciones" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                        <Col Span="12">
                        <FormItem Label="Número de pasillo:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.NumeroPasillo" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                    </Row>
                    <Row Gutter="24">
                        <Col Span="8">
                        <FormItem Label="Alto:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Alto" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                        <Col Span="8">
                        <FormItem Label="Largo:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Largo" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                        <Col Span="8">
                        <FormItem Label="Ancho:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Ancho" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                    </Row>
                    <Row Gutter="24">
                        <Col Span="8">
                        <FormItem Label="Estatus:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Select DataSource="@est"
                                    DefaultValue="@opcion"
                                    @bind-Value="@FormUbicacion.Estatus"
                                    ValueName="@nameof(Estatus.Nombre)"
                                    LabelName="@nameof(Estatus.Nombre)"
                                    disabled>
                            </Select>
                        </FormItem>
                        </Col>
                        <Col Span="16">
                        <FormItem Label="Descripción:" LabelCol="new ColLayoutParam { Span = 24 }" WrapperCol="new ColLayoutParam { Span = 24 }" style="margin: 2px;">
                            <Input @bind-Value="@FormUbicacion.Descripcion" style="margin: 2px;" disabled />
                        </FormItem>
                        </Col>
                    </Row>

                </Body>
                <ActionTemplate>
                    <CardAction Style="color: red;"><Icon Style="color: red;" Type="rollback" Theme="outline" OnClick="() => Cancelar()" /> Regresar</CardAction>
                </ActionTemplate>
            </Card>
        </Form>
    </div>
</div>
-->

<div style="background-color: #ffffff; padding: 20px;">
    <div style="background: #ffffff; padding: 20px; border-radius: 5px; width: 100%;">
        <EditForm Model="@FormUbicacion" OnValidSubmit="@AddUbicacion">
            <Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator />
            <Card Bordered="true" Style="align-self: center;">
                <Body>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label for="lastName" class="col-sm-4">Clave: </label>
                            <InputText id="lastName" class="form-control col-sm-12" @bind-Value="@FormUbicacion.Clave" placeholder="Ingresa la clave" disabled></InputText>
                            <ValidationMessage class="offset-sm-4 col-sm-8" For="@(() => FormUbicacion.Clave)" />
                        </div>
                        <div class="form-group col-md-6">
                            <label for="lastName" class="col-sm-4">Nombre: </label>
                            <InputText id="lastName" class="form-control col-sm-12" @bind-Value="@FormUbicacion.Nombre" placeholder="Ingresa el nombre" disabled></InputText>
                            <ValidationMessage class="offset-sm-4 col-sm-8" For="@(() => FormUbicacion.Nombre)" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label for="lastName" class="col-sm-4">Tipo de Almacen: </label>
                            <Select DataSource="@almacenes"
                                    @bind-Value="@FormUbicacion.IdAlmacen"
                                    DefaultValue="@FormUbicacion.IdAlmacen"
                                    ValueName="@nameof(Almacenn.IdAlmacen)"
                                    LabelName="@nameof(Almacenn.Nombre)"
                                    OnSelectedItemChanged="OnChange"
                                    disabled>
                            </Select>
                            <ValidationMessage class="offset-sm-4 col-sm-8" For="@(() => FormUbicacion.IdAlmacen)" />
                        </div>
                        <div class="form-group col-md-6">
                            <label for="lastName" class="col-sm-4">Pasillo: </label>
                            <AntDesign.InputNumber @bind-Value="@FormUbicacion.Pasillo" style="margin: 2px; width: 100%;" disabled/>
                            <ValidationMessage class="offset-sm-4 col-sm-8" For="@(() => FormUbicacion.Pasillo)" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label for="lastName" class="col-sm-4">Estante: </label>
                            <AntDesign.InputNumber  @bind-Value="@FormUbicacion.Estante" style="margin: 2px; width: 100%;" disabled/>
                            <ValidationMessage class="offset-sm-4 col-sm-8" For="@(() => FormUbicacion.Estante)" />
                        </div>
                        <div class="form-group col-md-6">
                            <label for="lastName" class="col-sm-4">Nivel: </label>
                            <AntDesign.InputNumber @bind-Value="@FormUbicacion.nivel" style="margin: 2px; width: 100%;" disabled/>
                            <ValidationMessage class="offset-sm-4 col-sm-8" For="@(() => FormUbicacion.nivel)" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <Select DataSource="@est"
                                    DefaultValue="@opcion"
                                    @bind-Value="@FormUbicacion.Estatus"
                                    ValueName="@nameof(Estatus.Nombre)"
                                    LabelName="@nameof(Estatus.Nombre)"
                                    disabled>
                            </Select>
                        </div>
                        
                    </div>
                </Body>
                <ActionTemplate>
                    <CardAction Style="color: red;">
                        <Button class="w-50" Danger OnClick="() => Cancelar()">
                            <Icon Style="color: red;" Type="rollback" Theme="outline" /> Regresar
                        </Button>
                    </CardAction>
                </ActionTemplate>
            </Card>
        </EditForm>
    </div>
</div>

@code { [Inject]
    private IUbicacionService ubicacionService { get; set; }
    [Inject]
    private IAlmacenService almacenService { get; set; }


    public class Ubicacion
    {
        public int IdUbicacion { get; set; }
        public string Clave { get; set; }
        public string Nombre { get; set; }
        public int IdAlmacen { get; set; }
        public int Estante { get; set; }
        public int Pasillo { get; set; }
        public int nivel { get; set; }
        public string Estatus { get; set; }
    }

    public string opcion = "Seleccione...";
    public string Titulo = "Detalle Ubicación";
    public Ubicacion FormUbicacion = new Ubicacion();
    public List<Ubicacion> ubicaciones = new List<Ubicacion>();

    [Parameter]
    public string IdUbicacion { get; set; } = "";

    public class Estatus
    {
        public int IdEstatus { get; set; }
        public string Nombre { get; set; }
    }

    public Estatus estatus = new Estatus();
    public List<Estatus> est = new List<Estatus>();
    public List<Almacenn> almacenes = new List<Almacenn>();
    public bool band=false;

    protected override async Task OnInitializedAsync()
    {
        almacenes = await almacenService.GetTodosAlmacenes();

        est.Add(new Estatus() { IdEstatus = 0, Nombre = "Seleccione..." });
        est.Add(new Estatus() { IdEstatus = 1, Nombre = "Activo" });
        est.Add(new Estatus() { IdEstatus = 1, Nombre = "Inactivo" });
        await ObtenerUbicacion();
    }

    public async Task AddUbicacion()
    {
        await js.InvokeAsync<bool>("confirmarGuardar", "¡Exito al guardar!", "success");
        await ubicacionService.AddUbicacion(
        FormUbicacion.Clave,
        FormUbicacion.Nombre,
        FormUbicacion.IdAlmacen,
        FormUbicacion.Pasillo,
        FormUbicacion.Estante,
        FormUbicacion.nivel,
        FormUbicacion.Estatus);
        var arts = await ubicacionService.GetTodosUbicacion();
        UriHelper.NavigateTo($"listado-ubicaciones");
    }

    public async Task ObtenerUbicacion()
    {
        var valor = int.Parse(IdUbicacion);
        var dto = await ubicacionService.GetUbicacionById(valor);
        FormUbicacion.IdUbicacion = dto.IdUbicacion;
        FormUbicacion.Clave = dto.Clave;
        FormUbicacion.Nombre = dto.Nombre;
        FormUbicacion.IdAlmacen = dto.IdAlmacen;
        FormUbicacion.Pasillo = dto.Pasillo;
        FormUbicacion.Estante = dto.Estante;
        FormUbicacion.nivel = dto.nivel;
        FormUbicacion.Estatus = dto.Estatus;
        if (dto.Estatus == "Activo")
        {
            opcion = "Activo";
        }
        else
        {
            opcion = "Inactivo";
        }
        ubicaciones.Add(new Ubicacion() { IdUbicacion = dto.IdUbicacion, Clave = dto.Clave, Nombre = dto.Nombre, Pasillo = dto.Pasillo, Estante = dto.Estante, nivel = dto.nivel, Estatus = dto.Estatus});

    }

    public async Task UpdateUbicacion()
    {
        await js.InvokeAsync<bool>("confirmarGuardar", "¡Modificación exitosa!", "success");
        await ubicacionService.UpdateAlmacen(
        FormUbicacion.IdUbicacion,
        FormUbicacion.Clave,
        FormUbicacion.Nombre,
        FormUbicacion.IdAlmacen,
        FormUbicacion.Pasillo,
        FormUbicacion.Estante,
        FormUbicacion.nivel,
        FormUbicacion.Estatus);
        var arts = await ubicacionService.GetTodosUbicacion();
        UriHelper.NavigateTo($"listado-ubicaciones");
    }
    public async Task Cancelar()
    {
        var arts = await ubicacionService.GetTodosUbicacion();
        UriHelper.NavigateTo($"listado-ubicaciones");
    }

    private void OnChange(Almacenn value)
    {
        Console.WriteLine($"selected: ${value?.IdAlmacen}");
        Console.WriteLine("IdAlmacen");
        Console.WriteLine(value?.IdAlmacen);
        if (value?.IdAlmacen == 1)
        {
            band = false;
        }
        else
        {
            band = true;
        }

    }

}
