@page "/listado-unidades"
@using System.ComponentModel
@using AntDesign.TableModels
@using PrototipoAcerosSA.Data
@using PrototipoAcerosSA.Models
@inject NavigationManager UriHelper


<style>
    .about-section {
        padding: 20px;
        text-align: center;
        background-color: #474e5d;
        color: white;
        width: 100%;
    }
</style>

<div class="about-section">
    <h3 style="color: white;">Consulta de Unidades</h3>
</div>

<br />
<br />

<Row Gutter="8">
    <Col Span="2">
    <label style="margin: 1px;">Buscar por:</label>
    </Col>
    <Col Span="3">
    <Select @bind-Value="@buscar_por"
            Style="width: 120px; margin: 1px;"
            TItemValue="string"
            TItem="string">
        <SelectOptions>
            <SelectOption TItemValue="string" TItem="string" Value="@("Clave")" Label="Clave" />
            <SelectOption TItemValue="string" TItem="string" Value="@("Nombre")" Label="Nombre" />
        </SelectOptions>
    </Select>
    </Col>
    <Col Span="5">
    <Search Style="margin: 1px;" Placeholder="Introduce tu búsqueda..." Size="@InputSize.Default" @bind-Value="@filtro" OnSearch="FiltrarUnidades" />
    </Col>
</Row>

<hr />

<Button Icon="form" Type="primary" OnClick="() => NavegarNuevaUnidad()">
    Agregar Nueva Unidad
</Button>

<br />
<br />

<Table @ref="table"
       TItem="Unidad"
       DataSource="@unidades"
       Total="_total"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize"
       Context="unidad">
    <!--<AntDesign.Column Title="Id" @bind-Field="@unidad.IdUnidad" Sortable />-->
    <AntDesign.Column @bind-Field="@unidad.Clave" Sortable />
    <AntDesign.Column @bind-Field="@unidad.Nombre" Sortable />
    <AntDesign.Column @bind-Field="@unidad.Estatus" Sortable />
    <AntDesign.Column @bind-Field="@unidad.Descripcion" Sortable />
    <ActionColumn Title="Acciones">
        <Button Icon="delete" Danger OnClick="() => QuitarFilaDetalle(unidad)">
            Eliminar
        </Button>
        <Button Icon="edit" Type="primary" OnClick="() => NavegarEditarUnidad(unidad.IdUnidad)">
            Editar
        </Button>
    </ActionColumn>
</Table>

<br />
<p>Pagina Actual: @_pageIndex | Unidades por Página: @_pageSize | Total: @_total</p>

@code {

    [Inject]
    private IUnidadService unidadService { get; set; }

    List<Unidad> unidades = new List<Unidad>();
    List<Unidad> todos = new List<Unidad>();
    List<Unidad> unidadFiltrados = new List<Unidad>();

    ITable table;
    int _pageIndex = 1;
    int _pageSize = 5;
    int _total = 0;

    string buscar_por = "Clave";
    string filtro = "";

    protected override async Task OnInitializedAsync()
    {
        unidades = await unidadService.GetTodosUnidades();
        _total = unidades.Count();
        todos = unidades;
    }

    public void FiltrarUnidades()
    {
        unidadFiltrados = new List<Unidad>();
        if (filtro != null && filtro.Length > 0)
        {
            foreach (var unidad in unidades)
            {
                if (buscar_por == "Clave")
                {
                    if (unidad.Clave.Contains(filtro.Trim()))
                    {
                        unidadFiltrados.Add(unidad);
                    }
                }
                else
                {
                    if (unidad.Nombre.Contains(filtro.Trim()))
                    {
                        unidadFiltrados.Add(unidad);
                    }
                }
            }
            unidades = unidadFiltrados;
        }
        else
        {
            unidades = todos;
        }
    }

    public void NavegarEditarUnidad(int IdUnidad)
    {
        UriHelper.NavigateTo($"editar-unidad/{IdUnidad}");
    }

    public void NavegarNuevaUnidad()
    {
        UriHelper.NavigateTo($"nueva-unidad");
    }

    public async Task QuitarFilaDetalle(Unidad unidad)
    {
        foreach (var detalle in unidades)
        {
            if (detalle.IdUnidad == unidad.IdUnidad)
            {
                unidades.Remove(detalle);
                break;
            }
        }
    }

}
