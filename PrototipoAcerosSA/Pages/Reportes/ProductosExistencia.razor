@page "/existenAlmacen"

@using PrototipoAcerosSA.Data
@using PrototipoAcerosSA.Models
@inject NotificationService _notice
@inject IJSRuntime js
@inject NavigationManager UriHelper
@using Syncfusion.XlsIO;
@using Syncfusion.Drawing;
@using System.IO;
@using System.Data;
@using ClosedXML.Excel;
@using System;
@using System.Collections.Generic;
@using System.IO;
@using System.Linq;
@using System.Text;
@using System.Threading.Tasks;


<style>
    .about-section {
        padding: 20px;
        text-align: center;
        background-color: #474e5d;
        color: white;
        width: 100%;
    }
</style>

<div class="about-section">
    <h3 style="color: white;">Reporte de Existencias en Almacén</h3>
</div>
<br />

<div style="text-align:right; width:87%;">
    <!-- <Button Type="primary" Icon="download" Size=@size OnClick="@CreateDocument">
        Descargar Reporte
    </Button> -->

    <Button Type="primary" Icon="download" Size=@size OnClick="@CreateDocumentSinLibreria">
        Descargar Reporte
    </Button>
</div>
<br />

<Table @ref="table"
       TItem="ArticuloExistencia"
       DataSource="@existencias"
       Total="_total"
       @bind-PageIndex="_pageIndex"
       @bind-PageSize="_pageSize"
       Context="articulo">
    <AntDesign.Column @bind-Field="@articulo.ClaveArticulo" Sortable />
    <AntDesign.Column Title="Nombre" @bind-Field="@articulo.Descripcion" Sortable />
    <AntDesign.Column @bind-Field="@articulo.Marca" Sortable />
    <AntDesign.Column @bind-Field="@articulo.Almacen" Sortable />
    <AntDesign.Column @bind-Field="@articulo.Unidad" Sortable />
    <AntDesign.Column @bind-Field="@articulo.Stock" Sortable />
</Table>


@code {

    [Inject]
    private IFacturaService facturaService { get; set; }

    public List<ArticuloExistencia> existencias { get; set; } = new List<ArticuloExistencia>();

    ITable table;
    int _pageIndex = 1;
    int _pageSize = 5;
    int _total = 0;
    string size = "large";

    protected override async Task OnInitializedAsync()
    {
        existencias = await facturaService.GetExistenciasArticulos();
    }

    public async void CreateDocument()
    {
        //Create an instance of ExcelEngine.
        using (ExcelEngine excelEngine = new ExcelEngine())
        {
            IApplication application = excelEngine.Excel;
            application.DefaultVersion = ExcelVersion.Xlsx;

            //Create a workbook.
            IWorkbook workbook = application.Workbooks.Create(1);
            IWorksheet worksheet = workbook.Worksheets[0];

            //Initialize DataTable and data get from SampleDataTable method.
            DataTable table = SampleDataTable();

            //Export data from DataTable to Excel worksheet.
            worksheet.ImportDataTable(table, true, 1, 1);

            worksheet.UsedRange.AutofitColumns();


            //Save the document as a stream and return the stream.
            using (MemoryStream stream = new MemoryStream())
            {
                //Save the created Excel document to MemoryStream
                workbook.SaveAs(stream);

                DateTime fecha = DateTime.Now;

                //Download the excel file.
                await SaveAs("Reporte" + fecha.ToString("dd/MM/yyy") + ".xlsx", stream.ToArray()); ;
            }
        }
    }

    private DataTable SampleDataTable()
    {
        DataTable reports = new DataTable();
        reports.Columns.Add("Clave Articulo");
        reports.Columns.Add("Descripción");
        reports.Columns.Add("Marca");
        reports.Columns.Add("Almacen");
        reports.Columns.Add("Unidad");
        reports.Columns.Add("Stock", typeof(int));
        existencias.ForEach(
            existencia =>
            {
                reports.Rows.Add(
                    existencia.ClaveArticulo,
                    existencia.Descripcion,
                    existencia.Marca,
                    existencia.Almacen,
                    existencia.Unidad,
                    existencia.Stock);
            }
        );

        return reports;
    }

    public async Task SaveAs(string filename, byte[] data)
    {
        js.InvokeAsync<object>(
        "saveAsFile",
        filename,
        Convert.ToBase64String(data));
    }

    public async void CreateDocumentSinLibreria()
    {
        if (existencias.Count() == 0)
        {
            await js.InvokeAsync<bool>("mensajeGenericoValidaciones", "Cuidado!", "No existen registros para generar el reporte.", "warning");
            return;
        }

        var workbook = new XLWorkbook();

        CreateAuthorWorksheet(workbook);

        //Save the document as a stream and return the stream.
        using (MemoryStream stream = new MemoryStream())
        {
            //Save the created Excel document to MemoryStream
            workbook.SaveAs(stream);

            DateTime fecha = DateTime.Now;

            //Download the excel file.
            await SaveAs("Reporte" + fecha.ToString("dd/MM/yyy") + ".xlsx", stream.ToArray()); ;
        }
    }

    public void CreateAuthorWorksheet(XLWorkbook package)
    {
        var worksheet = package.Worksheets.Add("Stock");

        worksheet.Cell(1, 1).Value = "Clave Articulo";
        worksheet.Cell(1, 2).Value = "Descripción";
        worksheet.Cell(1, 3).Value = "Marca";
        worksheet.Cell(1, 4).Value = "Almacen";
        worksheet.Cell(1, 5).Value = "Unidad";
        worksheet.Cell(1, 6).Value = "Stock";
        for (int index = 1; index <= existencias.Count(); index++)
        {
            worksheet.Cell(index + 1, 1).Value = existencias[index - 1].ClaveArticulo;
            worksheet.Cell(index + 1, 2).Value = existencias[index - 1].Descripcion;
            worksheet.Cell(index + 1, 3).Value = existencias[index - 1].Marca;
            worksheet.Cell(index + 1, 4).Value = existencias[index - 1].Almacen;
            worksheet.Cell(index + 1, 5).Value = existencias[index - 1].Unidad;
            worksheet.Cell(index + 1, 6).Value = existencias[index - 1].Stock;
        }

        worksheet.Columns("A").AdjustToContents();
        worksheet.Columns("B").AdjustToContents();
        worksheet.Columns("C").AdjustToContents();
        worksheet.Columns("D").AdjustToContents();
        worksheet.Columns("E").AdjustToContents();
        worksheet.Columns("F").AdjustToContents();
    }

}
